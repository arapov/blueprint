{{define "title"}}Roster{{end}}
{{define "head"}}{{end}}
{{define "content" -}}

<div id="roster">

    <div class="container">
        <div class="row">

            <!-- navigation bar -->
            <div class="col-2 my-3">
                <div id="toc" class="list-group sticky">
                    <a class="list-group-item list-group-item-action p-1"
                        v-for="group in orderedGroups" 
                        :href="'#' + group.cn[0]">
                        ${ group.description[0] }
                    </a>
                </div>
            </div>

            <!-- content -->
            <div class="col-10">

                <!-- spinner -->
                <div class="card my-3"
                    v-if="!ready" >
                    <div class="card-header">Roster is loading...</div>
                    <div class="card-body mx-auto">
                        <i class="fas fa-spinner fa-5x fa-spin"></i>
                    </div>
                </div>

                <!-- cards -->
                <div class="card my-3"
                    v-if="ready" v-for="group in orderedGroups">

                    <!-- card header -->
                    <div :id="group.cn[0]" class="card-header font-weight-bold py-2">
                        <span class="text-capitalize">
                            ${ group.description[0] }
                        </span>

                        <!-- card header actions -->
                        <span class="float-right">
                            <span class="mr-2" title="Open in new window."
                                v-if="groups.length > 1">
                                <a class="card-link" target="_blank"
                                    :href="'/roster/' + group.cn[0]">
                                    <i class="fas fa-external-link-alt"></i>
                                </a>
                            </span>
                            <span class="dropdown" title="Actions...">
                                <a class="btn btn-link btn-sm dropdown-toggle p-0"
                                    href="#" role="button"
                                    data-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </a>
                                <span class="dropdown-menu">
                                    <a class="dropdown-item"
                                        :href="'https://rover.redhat.com/groups/group/' + group.cn[0]">
                                        Edit
                                    </a>
                                    <a class="dropdown-item"
                                        v-for="subGroup in group.subGroup"
                                        :href="'https://rover.redhat.com/groups/group/' + subGroup.split(',')[0]">
                                        Edit ${ subGroup.split(',')[1] }
                                    </a>
                                </span>
                            </span>
                        </span>

                        <!-- card header stats -->
                        <span class="card-stats float-right mr-4">
                            <span class="mr-1" title="Number of subgroups."
                                v-if="group.subGroup.length > 0">
                                <i class="fas fa-users"></i>
                                <strong>${ group.subGroup.length }</strong>
                            </span>
                            <span title="Number of people in the group."
                                v-if="group.uniqueMember.length > 0">
                                <i class="fas fa-user"></i>
                                <strong>${ group.uniqueMember.length }</strong>
                            </span>
                        </span>
                    </div>
                    <!-- /card header -->

                    <!-- card body -->
                    <div class="card-body">
                        <div class="container">
                            <div class="row">

                                <!-- card body links -->
                                <div class="col-2">
                                    <ul class="list-unstyled">
                                        <li>link1</li>
                                        <li>link2</li>
                                        <li>link3</li>
                                    </ul>
                                </div>

                                <!-- card body governance -->
                                <div class="col-10">
                                    <ul class="row list-unstyled">
                                        <li class="list-item col-6"
                                            v-for="role in group.roles"
                                            v-if="group[role].length > 0">
                                            <span class="font-weight-bold">
                                                ${role}<span v-if="group[role].length > 1">s</span>
                                            </span>:
                                            <a class="comma"
                                                :href="'https://rover.redhat.com/people/profile/' + man.split(',')[0]"
                                                v-for="man in group[role]">
                                                ${ man.split(',')[1] }</a>
                                        </li>
                                    </ul>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /card body -->

                    <button class="btn btn-link btn-sm">
                        <i class="fas fa-chevron-down"></i>
                    </button>
                </div>
                <!-- /cards -->
            </div>
            <!-- /content -->

        </div>
    </div>
</div>

<script type="text/javascript">
let roster = new Vue({
    el: '#roster',
    delimiters: ['${','}'],
    data: {
        groups: [
            {   cn: [],
                description: [],
                subGroup: [],
                uniqueMember: [],
            },
        ],
        ready: false,
    },
    computed: {
        orderedGroups() {
            return _.sortBy(this.groups, 'cn');
        },
    },
    async mounted() {
        await axios
            .get('/api/v1/roster/groups/' + {{.group}} )
            .then(response => {
                this.groups = response.data.data;
            })
            .catch(error => {
                console.log(error)
                this.groups = [{
                        "cn": [error.response.data.errors[0].title],
                        "description": ["Error: " + error.response.data.errors[0].title],
                        subGroup: [],
                        uniqueMember: [],
                    }];
            });
        this.ready = true;
    },
});
</script>
{{- template "footer" .}}
{{- end}}
{{define "foot"}}{{end}}
